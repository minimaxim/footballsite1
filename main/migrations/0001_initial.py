# Generated by Django 4.1.4 on 2023-01-05 08:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Arena',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='arena')),
                ('is_published', models.BooleanField(default=True, verbose_name='published')),
                ('slug', models.SlugField(unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'arena',
                'verbose_name_plural': 'arens',
                'db_table': 'main_arens',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='category')),
                ('is_published', models.BooleanField(default=True, verbose_name='published')),
                ('slug', models.SlugField(unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
                'db_table': 'main_categories',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='name')),
                ('email', models.EmailField(max_length=254, verbose_name='email')),
                ('message', models.CharField(max_length=1024, verbose_name='message')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date created')),
            ],
            options={
                'verbose_name': 'contact',
                'verbose_name_plural': 'contacts',
                'db_table': 'main_contacts',
                'ordering': ['date_created'],
            },
        ),
        migrations.CreateModel(
            name='Tournaments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='tournament')),
                ('is_published', models.BooleanField(default=True, verbose_name='published')),
                ('slug', models.SlugField(unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'tournament',
                'verbose_name_plural': 'tournaments',
                'db_table': 'main_tournaments',
            },
        ),
        migrations.CreateModel(
            name='UpcomingMatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upcoming_match_team_one', models.CharField(default=None, max_length=32, verbose_name='upcoming match name team 1')),
                ('upcoming_match_team_two', models.CharField(default=None, max_length=32, verbose_name='upcoming match name team 2')),
                ('match_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='match day')),
                ('arena', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.arena', verbose_name='arena')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.tournaments', verbose_name='tournament')),
            ],
            options={
                'verbose_name': 'upcoming_match',
                'verbose_name_plural': 'upcoming_matches',
                'db_table': 'main_upmatches',
            },
        ),
        migrations.CreateModel(
            name='NewPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='name')),
                ('descr', models.TextField(verbose_name='description')),
                ('is_published', models.BooleanField(default=True, verbose_name='published')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date created')),
                ('slug', models.SlugField(unique=True, verbose_name='URL')),
                ('image', models.ImageField(blank=True, null=True, upload_to='news_image/', verbose_name='image')),
                ('back_image', models.ImageField(blank=True, null=True, upload_to='news_back_image/', verbose_name='back_image')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='author')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.category', verbose_name='category')),
            ],
            options={
                'verbose_name': 'news',
                'verbose_name_plural': 'news',
                'db_table': 'main_posts',
                'ordering': ['date_created'],
            },
        ),
        migrations.CreateModel(
            name='NearMatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('near_match_team_one', models.CharField(max_length=32, verbose_name='near match name team 1')),
                ('near_match_team_two', models.CharField(max_length=32, verbose_name='near match name team 2')),
                ('match_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='match day')),
                ('arena', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.arena', verbose_name='arena')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.tournaments', verbose_name='tournament')),
            ],
            options={
                'verbose_name': 'near_match',
                'verbose_name_plural': 'near_matches',
                'db_table': 'main_nearmatches',
            },
        ),
        migrations.CreateModel(
            name='LastMatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_one', models.CharField(max_length=32, verbose_name='name team 1')),
                ('goals_team_one', models.CharField(max_length=2, verbose_name='goals team 1')),
                ('players_team_one', models.CharField(max_length=256, verbose_name='goleadors team 1')),
                ('team_two', models.CharField(max_length=32, verbose_name='name team 2')),
                ('goals_team_two', models.CharField(max_length=2, verbose_name='goals team 2')),
                ('players_team_two', models.CharField(max_length=256, verbose_name='goleadors team 2')),
                ('match_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='match day')),
                ('arena', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.arena', verbose_name='arena')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.tournaments', verbose_name='tournament')),
            ],
            options={
                'verbose_name': 'last_match',
                'verbose_name_plural': 'lats_matches',
                'db_table': 'main_matches',
            },
        ),
    ]
